{"ast":null,"code":"// https://github.com/jquery/jquery/blob/2.1.3/src/manipulation/var/rcheckableType.js\n// https://github.com/jquery/jquery/blob/2.1.3/src/serialize.js\nvar _ = require('lodash'),\n  submittableSelector = 'input,select,textarea,keygen',\n  rCRLF = /\\r?\\n/g,\n  rcheckableType = /^(?:checkbox|radio)$/i,\n  rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i;\nexports.serializeArray = function () {\n  // Resolve all form elements from either forms or collections of form elements\n  var Cheerio = this.constructor;\n  return this.map(function () {\n    var elem = this;\n    var $elem = Cheerio(elem);\n    if (elem.name === 'form') {\n      return $elem.find(submittableSelector).toArray();\n    } else {\n      return $elem.filter(submittableSelector).toArray();\n    }\n  }).filter(function () {\n    var $elem = Cheerio(this);\n    var type = $elem.attr('type');\n\n    // Verify elements have a name (`attr.name`) and are not disabled (`:disabled`)\n    return $elem.attr('name') && !$elem.is(':disabled') &&\n    // and cannot be clicked (`[type=submit]`) or are used in `x-www-form-urlencoded` (`[type=file]`)\n    !rsubmitterTypes.test(type) && (\n    // and are either checked/don't have a checkable state\n    $elem.attr('checked') || !rcheckableType.test(type));\n    // Convert each of the elements to its value(s)\n  }).map(function (i, elem) {\n    var $elem = Cheerio(elem);\n    var name = $elem.attr('name');\n    var val = $elem.val();\n\n    // If there is no value set (e.g. `undefined`, `null`), then return nothing\n    if (val == null) {\n      return null;\n    } else {\n      // If we have an array of values (e.g. `<select multiple>`), return an array of key/value pairs\n      if (Array.isArray(val)) {\n        return _.map(val, function (val) {\n          // We trim replace any line endings (e.g. `\\r` or `\\r\\n` with `\\r\\n`) to guarantee consistency across platforms\n          //   These can occur inside of `<textarea>'s`\n          return {\n            name: name,\n            value: val.replace(rCRLF, '\\r\\n')\n          };\n        });\n        // Otherwise (e.g. `<input type=\"text\">`, return only one key/value pair\n      } else {\n        return {\n          name: name,\n          value: val.replace(rCRLF, '\\r\\n')\n        };\n      }\n    }\n    // Convert our result to an array\n  }).get();\n};","map":{"version":3,"names":["_","require","submittableSelector","rCRLF","rcheckableType","rsubmitterTypes","exports","serializeArray","Cheerio","constructor","map","elem","$elem","name","find","toArray","filter","type","attr","is","test","i","val","Array","isArray","value","replace","get"],"sources":["/Users/terencemui/Documents/ttWebsite/tt-website/node_modules/cheerio/lib/api/forms.js"],"sourcesContent":["// https://github.com/jquery/jquery/blob/2.1.3/src/manipulation/var/rcheckableType.js\n// https://github.com/jquery/jquery/blob/2.1.3/src/serialize.js\nvar _ = require('lodash'),\n    submittableSelector = 'input,select,textarea,keygen',\n    rCRLF = /\\r?\\n/g,\n    rcheckableType = /^(?:checkbox|radio)$/i,\n    rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i;\n\nexports.serializeArray = function() {\n  // Resolve all form elements from either forms or collections of form elements\n  var Cheerio = this.constructor;\n  return this.map(function() {\n      var elem = this;\n      var $elem = Cheerio(elem);\n      if (elem.name === 'form') {\n        return $elem.find(submittableSelector).toArray();\n      } else {\n        return $elem.filter(submittableSelector).toArray();\n      }\n    }).filter(function() {\n      var $elem = Cheerio(this);\n      var type = $elem.attr('type');\n\n      // Verify elements have a name (`attr.name`) and are not disabled (`:disabled`)\n      return $elem.attr('name') && !$elem.is(':disabled') &&\n        // and cannot be clicked (`[type=submit]`) or are used in `x-www-form-urlencoded` (`[type=file]`)\n        !rsubmitterTypes.test(type) &&\n        // and are either checked/don't have a checkable state\n        ($elem.attr('checked') || !rcheckableType.test(type));\n    // Convert each of the elements to its value(s)\n    }).map(function(i, elem) {\n      var $elem = Cheerio(elem);\n      var name = $elem.attr('name');\n      var val = $elem.val();\n\n      // If there is no value set (e.g. `undefined`, `null`), then return nothing\n      if (val == null) {\n        return null;\n      } else {\n        // If we have an array of values (e.g. `<select multiple>`), return an array of key/value pairs\n        if (Array.isArray(val)) {\n          return _.map(val, function(val) {\n            // We trim replace any line endings (e.g. `\\r` or `\\r\\n` with `\\r\\n`) to guarantee consistency across platforms\n            //   These can occur inside of `<textarea>'s`\n            return {name: name, value: val.replace( rCRLF, '\\r\\n' )};\n          });\n        // Otherwise (e.g. `<input type=\"text\">`, return only one key/value pair\n        } else {\n          return {name: name, value: val.replace( rCRLF, '\\r\\n' )};\n        }\n      }\n    // Convert our result to an array\n    }).get();\n};\n"],"mappings":"AAAA;AACA;AACA,IAAIA,CAAC,GAAGC,OAAO,CAAC,QAAQ,CAAC;EACrBC,mBAAmB,GAAG,8BAA8B;EACpDC,KAAK,GAAG,QAAQ;EAChBC,cAAc,GAAG,uBAAuB;EACxCC,eAAe,GAAG,uCAAuC;AAE7DC,OAAO,CAACC,cAAc,GAAG,YAAW;EAClC;EACA,IAAIC,OAAO,GAAG,IAAI,CAACC,WAAW;EAC9B,OAAO,IAAI,CAACC,GAAG,CAAC,YAAW;IACvB,IAAIC,IAAI,GAAG,IAAI;IACf,IAAIC,KAAK,GAAGJ,OAAO,CAACG,IAAI,CAAC;IACzB,IAAIA,IAAI,CAACE,IAAI,KAAK,MAAM,EAAE;MACxB,OAAOD,KAAK,CAACE,IAAI,CAACZ,mBAAmB,CAAC,CAACa,OAAO,EAAE;IAClD,CAAC,MAAM;MACL,OAAOH,KAAK,CAACI,MAAM,CAACd,mBAAmB,CAAC,CAACa,OAAO,EAAE;IACpD;EACF,CAAC,CAAC,CAACC,MAAM,CAAC,YAAW;IACnB,IAAIJ,KAAK,GAAGJ,OAAO,CAAC,IAAI,CAAC;IACzB,IAAIS,IAAI,GAAGL,KAAK,CAACM,IAAI,CAAC,MAAM,CAAC;;IAE7B;IACA,OAAON,KAAK,CAACM,IAAI,CAAC,MAAM,CAAC,IAAI,CAACN,KAAK,CAACO,EAAE,CAAC,WAAW,CAAC;IACjD;IACA,CAACd,eAAe,CAACe,IAAI,CAACH,IAAI,CAAC;IAC3B;IACCL,KAAK,CAACM,IAAI,CAAC,SAAS,CAAC,IAAI,CAACd,cAAc,CAACgB,IAAI,CAACH,IAAI,CAAC,CAAC;IACzD;EACA,CAAC,CAAC,CAACP,GAAG,CAAC,UAASW,CAAC,EAAEV,IAAI,EAAE;IACvB,IAAIC,KAAK,GAAGJ,OAAO,CAACG,IAAI,CAAC;IACzB,IAAIE,IAAI,GAAGD,KAAK,CAACM,IAAI,CAAC,MAAM,CAAC;IAC7B,IAAII,GAAG,GAAGV,KAAK,CAACU,GAAG,EAAE;;IAErB;IACA,IAAIA,GAAG,IAAI,IAAI,EAAE;MACf,OAAO,IAAI;IACb,CAAC,MAAM;MACL;MACA,IAAIC,KAAK,CAACC,OAAO,CAACF,GAAG,CAAC,EAAE;QACtB,OAAOtB,CAAC,CAACU,GAAG,CAACY,GAAG,EAAE,UAASA,GAAG,EAAE;UAC9B;UACA;UACA,OAAO;YAACT,IAAI,EAAEA,IAAI;YAAEY,KAAK,EAAEH,GAAG,CAACI,OAAO,CAAEvB,KAAK,EAAE,MAAM;UAAE,CAAC;QAC1D,CAAC,CAAC;QACJ;MACA,CAAC,MAAM;QACL,OAAO;UAACU,IAAI,EAAEA,IAAI;UAAEY,KAAK,EAAEH,GAAG,CAACI,OAAO,CAAEvB,KAAK,EAAE,MAAM;QAAE,CAAC;MAC1D;IACF;IACF;EACA,CAAC,CAAC,CAACwB,GAAG,EAAE;AACZ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}